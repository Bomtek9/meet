{"ast":null,"code":"import mockData from \"./mock-data\";\nexport const extractLocations = events => {\n  const extractedLocations = events.map(event => event.location);\n  const locations = [...new Set(extractedLocations)];\n  return locations;\n};\nconst checkToken = async accessToken => {\n  const response = await fetch(\"https://k6z8ae60ne.execute-api.eu-central-1.amazonaws.com/dev/api/token/\");\n  const result = await response.json();\n  return result;\n};\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const response = await fetch(\"https://k6z8ae60ne.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\");\n      const result = await response.json();\n      const {\n        authUrl\n      } = result;\n      return window.location.href = authUrl;\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\nexport const getEvents = async () => {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockData;\n  }\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = \"https://k6z8ae60ne.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" + \"/\" + token;\n    const response = await fetch(url);\n    const result = await response.json();\n    if (result) {\n      return result.events;\n    } else return null;\n  }\n};\nconst removeQuery = () => {\n  let newurl;\n  if (window.history.pushState && window.location.pathname) {\n    newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\nconst getToken = async code => {\n  const encodeCode = encodeURIComponent(code);\n  const response = await fetch(\"YOUR_GET_ACCESS_TOKEN_ENDPOINT\" + \"/\" + encodeCode);\n  const {\n    access_token\n  } = await response.json();\n  access_token && localStorage.setItem(\"access_token\", access_token);\n  return access_token;\n};","map":{"version":3,"names":["mockData","extractLocations","events","extractedLocations","map","event","location","locations","Set","checkToken","accessToken","response","fetch","result","json","getAccessToken","localStorage","getItem","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","code","get","authUrl","href","getToken","getEvents","startsWith","token","removeQuery","url","newurl","history","pushState","pathname","protocol","host","encodeCode","encodeURIComponent","access_token","setItem"],"sources":["/Users/clayduplantis/Documents/GitHub/meet/src/api.js"],"sourcesContent":["import mockData from \"./mock-data\";\n\nexport const extractLocations = (events) => {\n  const extractedLocations = events.map((event) => event.location);\n  const locations = [...new Set(extractedLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const response = await fetch(\n    \"https://k6z8ae60ne.execute-api.eu-central-1.amazonaws.com/dev/api/token/\"\n  );\n  const result = await response.json();\n  return result;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const response = await fetch(\n        \"https://k6z8ae60ne.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const result = await response.json();\n      const { authUrl } = result;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nexport const getEvents = async () => {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://k6z8ae60ne.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      token;\n    const response = await fetch(url);\n    const result = await response.json();\n    if (result) {\n      return result.events;\n    } else return null;\n  }\n};\n\nconst removeQuery = () => {\n  let newurl;\n  if (window.history.pushState && window.location.pathname) {\n    newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const response = await fetch(\n    \"YOUR_GET_ACCESS_TOKEN_ENDPOINT\" + \"/\" + encodeCode\n  );\n  const { access_token } = await response.json();\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}